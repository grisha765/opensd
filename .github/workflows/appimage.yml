name: Release (main)

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'README.md'
  workflow_dispatch:

env:
    APP_DIR: AppDir
    APP_NAME: OpenSD-x86_64.AppImage

jobs:
  build:
    name: Build and Upload
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Get short commit SHA and commit count
      id: vars
      run: | 
        echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "COMMIT_NUMBER=$(git rev-list --count HEAD)" >> $GITHUB_ENV

    - name: Set up AppImage
      run: |
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-*.AppImage

    - name: Install dependencies
      run: sudo apt install build-essential cmake libfuse2 libfuse-dev man-db pkg-config

    - name: Configure build with cmake
      run: cmake -S . -Bbuild -DOPT_POSTINSTALL=FALSE -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr/local

    - name: Build with cmake
      run: cmake --build build

    - name: Install on AppImage dir
      run: |
        mkdir -p ${{ env.APP_DIR }}
        cmake --build build --target install DESTDIR=$PWD/${{ env.APP_DIR }}

    - name: Copy files
      run: |
        mv xdg/opensd.png ${{ env.APP_DIR }}/opensd.png
        mv xdg/opensd.desktop ${{ env.APP_DIR }}/opensd.desktop

    - name: Gen AppImage run script
      run: |
        cat > ${{ env.APP_DIR }}/AppRun << EOF
        #!/bin/bash
        exec "\$APPDIR/usr/local/bin/opensdd" "\$@"
        EOF
        chmod +x ${{ env.APP_DIR }}/AppRun

    - name: Build with AppImageTool
      run: |
        ./appimagetool-*.AppImage ${{ env.APP_DIR }} ${{ env.APP_NAME }}
        chmod +x ${{ env.APP_NAME }}

    - name: Create Pre-release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "build-${{ env.COMMIT_NUMBER }}-${{ env.SHORT_SHA }}"
        release_name: "Build from commit ${{ env.SHORT_SHA }}"
        prerelease: false
        draft: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.APP_NAME }}
        asset_name: ${{ env.APP_NAME }}
        asset_content_type: application/octet-stream
